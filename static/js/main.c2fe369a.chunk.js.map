{"version":3,"sources":["Components/Navigation.js","Components/Footer.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["NavbarFeatures","react_default","a","createElement","BrowserRouter","mdbreact","color","dark","expand","className","to","React","Component","FooterPage","md","href","outline","tag","icon","AboutContent","src","alt","id","rounded","App","Navigation","About","Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4QAuBeA,mLAhBP,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,OAAD,CAAQC,MAAM,QAAQC,MAAI,EAACC,OAAO,MAC1BP,EAAAC,EAAAC,cAACE,EAAA,UAAD,KACIJ,EAAAC,EAAAC,cAAA,OAAKM,UAAU,iCACXR,EAAAC,EAAAC,cAACE,EAAA,QAAD,KAASJ,EAAAC,EAAAC,cAACE,EAAA,QAAD,CAASK,GAAG,KAAZ,qBAPZC,IAAMC,WCqBpBC,mLArBP,OACIZ,EAAAC,EAAAC,cAACE,EAAA,OAAD,CAAQC,MAAM,QAAQG,UAAU,8CAC5BR,EAAAC,EAAAC,cAACE,EAAA,UAAD,KACIJ,EAAAC,EAAAC,cAACE,EAAA,IAAD,KACIJ,EAAAC,EAAAC,cAACE,EAAA,IAAD,CAAKS,GAAG,MACJb,EAAAC,EAAAC,cAAA,OAAKM,UAAU,oBACXR,EAAAC,EAAAC,cAACE,EAAA,OAAD,CAAQU,KAAK,yCAAyCC,SAAO,EAACC,IAAI,IAAIX,MAAM,SAA5E,IAAqFL,EAAAC,EAAAC,cAACE,EAAA,GAAD,CAAII,UAAU,OAAOS,KAAK,cAC/GjB,EAAAC,EAAAC,cAACE,EAAA,OAAD,CAAQU,KAAK,oDAAoDC,SAAO,EAAEC,IAAI,IAAIX,MAAM,SAAxF,IAAiGL,EAAAC,EAAAC,cAACE,EAAA,GAAD,CAAII,UAAU,OAAOS,KAAK,cAC3HjB,EAAAC,EAAAC,cAACE,EAAA,OAAD,CAAQU,KAAK,mCAAmCC,SAAO,EAACC,IAAI,IAAIX,MAAM,SAAtE,IAA+EL,EAAAC,EAAAC,cAACE,EAAA,GAAD,CAAII,UAAU,OAAOS,KAAK,wBAVhHP,IAAMC,WCsBhBO,mLApBP,OACIlB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,sDACXR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,6BAAb,2BACAR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,kDACXR,EAAAC,EAAAC,cAAA,OACJiB,IAAI,yBACJC,IAAI,SAASZ,UAAU,gDAAgDa,GAAG,WAE1ErB,EAAAC,EAAAC,cAAA,KAAGM,UAAU,6BAAb,gDAC+CR,EAAAC,EAAAC,cAAA,WAD/C,uCAIAF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,8BACfR,EAAAC,EAAAC,cAACE,EAAA,OAAD,CAAQY,IAAI,IAAIF,KAAK,uCAAuCT,MAAM,OAAOiB,SAAO,EAACP,SAAO,GAACf,EAAAC,EAAAC,cAACE,EAAA,GAAD,CAAIa,KAAK,WAAWT,UAAU,SAAvH,wBAfWE,IAAMC,WCsBlBY,mLAZP,OACIvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsB,EAAD,MACAxB,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAACwB,EAAD,cANEf,aCDEgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c2fe369a.chunk.js","sourcesContent":["import React  from 'react';\nimport { Navbar, NavbarNav, NavItem, NavLink} from 'mdbreact';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nclass NavbarFeatures extends React.Component {\n    render() {\n        return (\n            <Router>\n                <Navbar color=\"black\" dark expand=\"xs\">\n                        <NavbarNav>\n                            <div className=\"d-flex justify-content-center\">\n                                <NavItem><NavLink to=\"/\" >About</NavLink></NavItem>\n                                {/*<NavItem><NavLink to=\"#\">Posts</NavLink></NavItem>*/}\n                                {/*<NavItem><NavLink to=\"#\">Projects</NavLink></NavItem>*/}\n                            </div>\n                        </NavbarNav>\n                </Navbar>\n            </Router>\n        );\n    }\n}\n\nexport default NavbarFeatures;","import React from 'react';\nimport { Col, Container, Row, Footer,Fa,Button } from 'mdbreact';\n\nclass FooterPage extends React.Component {\n    render(){\n        return(\n            <Footer color=\"black\" className=\"font-small pt-0 fixed-bottom u-text-center\">\n                <Container>\n                    <Row>\n                        <Col md=\"12\">\n                            <div className=\"mb-5 flex-center\">\n                                <Button href=\"https://www.facebook.com/renardeinside\" outline tag=\"a\" color=\"white\"> <Fa className=\"mx-0\" icon=\"facebook\" /></Button>\n                                <Button href=\"https://www.linkedin.com/in/ivan-trusov-37853679/\" outline  tag=\"a\" color=\"white\"> <Fa className=\"mx-0\" icon=\"linkedin\" /></Button>\n                                <Button href=\"https://github.com/renardeinside\" outline tag=\"a\" color=\"white\"> <Fa className=\"mx-0\" icon=\"github\" /></Button>\n                                {/*<a className=\"fb-ic mx-lg-auto\" href=\"https://www.facebook.com/renardeinside\"><i className=\"fa fa-facebook fa-lg white-text mr-md-5 mr-3 fa-2x\"></i></a>*/}\n                                {/*<a className=\"li-ic mx-lg-auto\" href=\"https://www.linkedin.com/in/ivan-trusov-37853679/\"><i className=\"fa fa-linkedin fa-lg white-text mr-md-5 mr-3 fa-2x\"> </i></a>*/}\n                                {/*<a className=\"gh-ic mx-lg-auto\" href=\"https://github.com/renardeinside\"><i className=\"fa fa-github fa-lg white-text mr-md-5 mr-3 fa-2x\"> </i></a>*/}\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </Footer>\n        );\n    }\n}\n\nexport default FooterPage;\n","import React  from 'react';\nimport {Button,Fa} from 'mdbreact';\n\nclass AboutContent extends React.Component {\n    render() {\n        return (\n            <div className=\"container-fluid align-items-center mt-lg-5 mt-xs-5\">\n                <p className=\"text-center h1-responsive\">Hello, my name is Ivan!</p>\n                <div className=\"avatar container-fluid align-items-center mb-3\">\n                    <img\n                src=\"../assets/my_photo.jpg\"\n                alt=\"avatar\" className=\"rounded-circle img-responsive mx-auto d-block\" id=\"photo\">\n                </img></div>\n                <p className=\"text-center h6-responsive\">\n                  I am a machine learning engineer from Moscow.<br/>\n                    I create models and data pipelines.\n                </p>\n                <div className=\"row justify-content-center\">\n                <Button tag=\"a\" href=\"mailto:ivan.trusov.contact@gmail.com\" color=\"dark\" rounded outline><Fa icon=\"envelope\" className=\"mr-1\"/> contact me</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AboutContent;\n\n","import React, { Component } from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\n// my components\nimport NavbarFeatures from './Components/Navigation';\nimport FooterPage from './Components/Footer';\nimport AboutContent from './Components/About';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <NavbarFeatures/>\n                <AboutContent/>\n                <FooterPage/>\n            </div>\n\n\n        )\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}